# This playbook syncronizes template files that should be applied to a repository.
# It ensures that the templates are rendered and copied to the appropriate locations,
# and maintains a log of the last sync operation.
#
# Environment detection logic:
#   - java:     pom.xml
#   - nodejs:   package.json (and no typescript dependency)
#   - typescript: package.json (with typescript dependency)
#   - dotnet:   *.sln or *.csproj
#   - ansible:  ansible.cfg
#   - default:  fallback if none detected
#
# To add a new environment, add a new subdirectory under templates/ and extend the detection logic here.

- name: Template Sync Playbook
  hosts: localhost
  vars:
    repo_path: "{{ repo_path | default(ansible_env.PWD) }}"
    # Determine environment flavor
    java_files: "{{ lookup('ansible.builtin.fileglob', repo_path + '/pom.xml', errors='ignore') }}"
    node_files: "{{ lookup('ansible.builtin.fileglob', repo_path + '/package.json', errors='ignore') }}"
    dotnet_files: "{{ lookup('ansible.builtin.fileglob', repo_path + '/*.sln', errors='ignore') + lookup('ansible.builtin.fileglob', repo_path + '/*.csproj', errors='ignore') }}"
    ansible_files: "{{ lookup('ansible.builtin.fileglob', repo_path + '/ansible.cfg', errors='ignore') }}"
    ts_files: "{{ lookup('ansible.builtin.fileglob', repo_path + '/package.json', errors='ignore') }}"
    # Add more as needed
    template_flavor: |
      {% if java_files %}java
      {% elif ansible_files %}ansible
      {% elif dotnet_files %}dotnet
      {% elif node_files %}
        {% set pkg = lookup('file', repo_path + '/package.json') | from_json %}
        {% if 'typescript' in (pkg.get('devDependencies', {}) | list + pkg.get('dependencies', {}) | list) %}typescript
        {% else %}nodejs
        {% endif %}
      {% else %}default
      {% endif %}
    template_dir: "{{ playbook_dir }}/templates/{{ template_flavor | trim }}"
    sync_log_path: "{{ repo_path }}/.template-sync/sync-report.json"

  tasks:
    - name: Ensure github directory exists
      ansible.builtin.file:
        path: "{{ repo_path }}/.github"
        state: directory
        mode: '0755'

    - name: Check if copilot instructions file exists
      ansible.builtin.stat:
        path: "{{ repo_path }}/.github/copilot-instructions.md"
      register: copilot_instructions

    - name: Copy copilot instructions file if it does not exist
      ansible.builtin.template:
        src: "{{ template_dir }}/copilot-instructions.md.j2"
        dest: "{{ repo_path }}/.github/copilot-instructions.md"
        mode: '0644'
      when: not copilot_instructions.stat.exists

    - name: Check if .vscode/mcp.json file exists
      ansible.builtin.stat:
        path: "{{ repo_path }}/.vscode/mcp.json"
      register: mcp_json

    - name: Copy .vscode/mcp.json file if it does not exist
      ansible.builtin.template:
        src: "{{ template_dir }}/mcp.json.j2"
        dest: "{{ repo_path }}/.vscode/mcp.json"
        mode: '0644'
      when: not mcp_json.stat.exists
